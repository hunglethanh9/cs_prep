{
  "name": "CS Prep Guide",
  "tagline": "Guide to CS Engineering and Prep",
  "body": "# CS Prep Guide\r\n\r\nThis guide aims to help you scale from zero to infinity for a career in domains related to Computer Science in general and Software Development in particular. I'd highly encourage you to read [this](https://captnemo.in/2015/10/12/get-better-at-software-development.html) as well - as an introduction to getting better.\r\n\r\n>Be curious. Read widely. Try new things. What people call intelligence just boils down to curiosity - Aaron Swartz\r\n\r\n## 1. Computer Science Curriculum\r\n\r\nCourses below helps you cover the very basics of CS.\r\n\r\n* [Google's CS Career and Technical Developement Guide](https://www.google.com/about/careers/students/guide-to-technical-development.html)\r\n  Consists list of MOOC Courses and Resources for a career in CS\r\n* [Open University](https://github.com/open-source-society/computer-science)\r\n  List of free online MOOC courses that you might take up to gain your free education in Computer Science\r\n\r\n### Stuff for the curious\r\n\r\n* [Computer Science Field Guide](http://csfieldguide.org.nz/)\r\n* [CS Handbook](http://www.thecshandbook.com/)\r\n* [Computer Science from the Bottom Up](http://www.bottomupcs.com/)\r\n* [Open Data Structures](http://opendatastructures.org/)\r\n* [List of Awesome Courses](https://github.com/prakhar1989/awesome-courses)\r\n\r\n## 2. Technical Books to Read\r\n\r\n### The essentials\r\n\r\n* [Fred Brooks' The Mythical Man-Month](#)\r\n* [Donald Knuth's The Art of Computer Programming](#)\r\n* [Structure and Interpretation of Computer Programs](#)\r\n\r\n### Optional Alternative\r\nYou can also cover a list as given here. Thanks to [Abhay Rana](https://captnemo.in/).\r\n\r\n* [List by CodingHorror](https://blog.codinghorror.com/recommended-reading-for-developers/)\r\n* [Find some here as well](http://hackershelf.com/browse/)\r\n* [A LONG LIST OF FREE EBOOKS](https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md)\r\n\r\n## 3. Programming\r\n\r\n### Books\r\n\r\n* [CLRS](https://en.wikipedia.org/wiki/Introduction_to_Algorithms)\r\n\r\n### Websites\r\n\r\n* [HackerRank](https://www.hackerrank.com/)\r\n* [InterviewBit](https://www.interviewbit.com/)\r\n* [CodeChef](https://www.codechef.com/)\r\n* [TopCoder](https://www.topcoder.com/)\r\n* [HackerEarth](https://www.hackerearth.com/)\r\n* [Project Euler](https://projecteuler.net/)\r\n* [SPOJ](http://www.spoj.com/)\r\n* [LeetCode](https://leetcode.com/problemset/algorithms/)\r\n\r\n### Courses\r\n\r\n* [Algorithms I](https://www.coursera.org/course/algs4partI)\r\n* [Algorithms II](https://www.coursera.org/course/algs4partII)\r\n* [Data Structures and Algorithms - Coursera](https://www.coursera.org/specializations/data-structures-algorithms)\r\n\r\n### Coding Contests\r\n\r\n* [Google Code Jam](https://code.google.com/codejam)\r\n* [Facebook Hacker Cup](https://www.facebook.com/hackercup/)\r\n* [Code Forces](http://codeforces.com/)\r\n\r\n## 4. Free Side Project Ideas\r\n\r\n* [From @karan](https://github.com/karan/Projects)\r\n* [My own side project list](https://docs.google.com/document/d/1QEdIOuvvJN5LIQapNcEIXhGLUGrgfFQp585wu33I5oQ/edit?usp=sharing)\r\n\r\n### Open Source Projects\r\n\r\nSome Open Source projects where you can start contributing. How to start? [Read this](https://blog.newrelic.com/2014/05/05/open-source_gettingstarted/).\r\n\r\n* [From Github](https://github.com/explore)\r\n* [A list of organizations from GSOC](https://developers.google.com/open-source/gsoc/2016/organizations)\r\n\r\n## 5. Coding Interview Preparation\r\n* [InterviewCake](https://www.interviewcake.com/)\r\n* [CareerCup - Coding Interview Questions](https://www.careercup.com/page?pid=coding-interview-questions)\r\n* Some links from [GeeksForGeeks](http://www.geeksforgeeks.org/) : [1](http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/), [2](http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/), [3](http://www.geeksforgeeks.org/top-25-interview-questions/)\r\n\r\n### Some guides from organizations\r\n\r\n* [Interviewing at Palantir - Prep Guide](https://www.palantir.com/getting-hired/)\r\n* [The Asana Interviewing Guide](https://blog.asana.com/2016/03/asana-engineering-interview-guide/)\r\n* [Passing a Programming Interview](http://blog.triplebyte.com/how-to-pass-a-programming-interview)\r\n* [List of Interview Experiences from GeeksForGeeks](http://www.geeksforgeeks.org/about/interview-corner/)\r\n\r\n## 6. Building Profile/Knowledge\r\n\r\n* Create a Twitter account and follow good lists. Some of mine [here](https://twitter.com/dtsdwarak/lists/).\r\n* Create a StackOverFlow account and answer as many questions as possible - explore and learn.\r\n* Listen to podcasts. Some of my personal favourites [here](https://blog.dwarak.in/2015/07/13/Best-Podcasts-On-Web/).\r\n* Talk and present in meetups/conferences.\r\n* **Stay Humble. Don't be an ass!**\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}